#N canvas 1086 106 647 566 10;
#X obj 51 227 snake~ in 3;
#X obj 51 443 snake~ out 3;
#X msg 144 236 kernel -0.5 1 -0.5;
#X msg 51 206 0 1 0;
#X text 74 335 parameters;
#X text 74 355 -n to normalize;
#X text 74 375 -c to set to cyclic mode;
#X obj 51 163 loadbang;
#X msg 204 171 cyclic \$1;
#X obj 204 148 tgl 16 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 205 68 tgl 16 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 205 91 normalize \$1;
#X msg 144 266 kernel 0.25 0.5 1 0.5 0.25;
#X obj 230 468 bang~;
#X obj 51 484 snapshot~;
#X obj 111 484 snapshot~;
#X obj 171 484 snapshot~;
#X floatatom 51 505 5 0 0 0 - - - 0;
#X floatatom 111 505 5 0 0 0 - - - 0;
#X floatatom 171 505 5 0 0 0 - - - 0;
#X text 74 395 <list of float> for initial kernel;
#X text 322 240 kernels need to be lists of odd length.;
#X text 321 263 the kernel is centered on each input channel. for each sample \, the kernel is multiplied with the corresponding input samples across channels. the results are summed to produce the output for that channel., f 45;
#X obj 51 302 mc_conv~ -n 0.5 1 0.5;
#X text 320 174 cyclic: wraps around channel boundaries;
#X text 320 144 non-cyclic (default): edge channels use repeated edge values, f 44;
#X text 324 86 normalize kernel to sum of 1 (off by default);
#X connect 0 0 23 0;
#X connect 1 0 14 0;
#X connect 1 1 15 0;
#X connect 1 2 16 0;
#X connect 2 0 23 0;
#X connect 3 0 0 0;
#X connect 7 0 3 0;
#X connect 8 0 23 0;
#X connect 9 0 8 0;
#X connect 10 0 11 0;
#X connect 11 0 23 0;
#X connect 12 0 23 0;
#X connect 13 0 16 0;
#X connect 13 0 15 0;
#X connect 13 0 14 0;
#X connect 14 0 17 0;
#X connect 15 0 18 0;
#X connect 16 0 19 0;
#X connect 23 0 1 0;
